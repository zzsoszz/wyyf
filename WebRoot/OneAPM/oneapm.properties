# 此文件用于配置OneAPM Agent.
# OneAPM 深度、低耗地监控您的java 应用.
# 更多信息,请访问：www.oneapm.com
#
# ============================== LICENSE KEY ===============================

# 你必须指明你的 OneAPM 账户的license_key 。
# 这个 license_key 会将你的 agent 数据绑定到你的账号下.

license_key = BgBSAFAEAQo73f7DG14QXlkaW0c718JfChtRBwANH270ewcJSAMFGgcG2565AlMaUw8cCQU=

# Agent 启用
# 使用这个参数来控制 agent 是否运行.
# 默认是 true 
#agent_enabled = true

# 设定为true可以启用对 auto app naming 的支持.
# 会自动检测您的每一个 web app 的名字.
# 同时将不同 Agent 的数据对应到不同web app中.
# 默认是 false.
enable_auto_app_naming = false

# 设定为 true 会基于您的组件名称为每个事务命名.
# 设定为 false 将使用一个 web 请求的 URI 作为事务的名字.
# 默认是true.
enable_auto_transaction_naming = true

# 将你的应用程序的用一个你喜欢的名字在OneAPM中显示.
# 如果enable_auto_app_naming 设定为 false ,agent 将发送所有数据给这个应用程序。
# 否则,agent 只报告非WEB的事务给这个应用程序。
# 要将报告数据发送给多个应用程序，请使用";"将程序名分隔开。
# 例如，将数据发送给"My Application" 和 "My Application 2" 就使用如下的方式:
# app_name: My Application;My Application 2
# 此参数为必设参数。
app_name = MyApplication

# Agent 将会使用自带的日志文件进行日志记录,从而区别于您应用自身的日志.
# 这个设置是动态的，更改它并不需要您重启应用.
# 在此指定您日志的级别
# log 的级别: off, severe, warning, info, fine, finer, finest
# 默认是info.  
log_level = off

# 将所有进出 OneAPM 数据记录为纯文本格式
# 这项设置是动态的，更改它您不需要重启应用
# 默认为false
audit_mode = false


# The number of log files to use.
# Default is 1.
#log_file_count = 1

# 写入 log 文件的最大字节数.
# 默认是 0 (不限制).
#log_limit_in_kbytes = 0

# log 文件的名称
# 默认名: oneapm.log.
#log_file_name = oneapm.log

# log 文件目录.
# 默认地址为 oneapm.jar 的父目录.
#log_file_path = application server path/OneAPM/logs


# 客户服务器端口,设置后是agent名称一部分
#appserver_port = 1000

# agent默认用 https 方式与 OneAPM 联系
# 如果您希望用 http 方式与 OneAPM 联系，
# 通过将值赋为 false 来关闭SSL
# 这个动作所在线程与运行您应用代码的线程相异，
# 所以不会导致响应时间的变化。
# 默认为true
ssl = true

# 服务器地址设置
host = tpm.oneapm.com
port = 443

# 设置代理连接 OneAPM 服务器.
#
# 如果代理被使用, 那么主机设置就是必须的.
# 其它设置是可选的。
# 默认端口是8080.
# 设置用户名和密码以对代理进行认证
#
# proxy_host = hostname
# proxy_port = 8080
# proxy_user = username
# proxy_password = password

#（在激活时）向事务追踪器和错误收集器报告是否能捕捉HTTP参数。
# 当值为true时，框架不捕捉HTTP数据.
# 默认为false.
capture_params = true

# 告知事务追踪器和错误收集器有选择的放弃收集某些特殊http参数
ignored_params = credit_card, ssn, password

# ApdexT 用来表示事务执行时间的阈值，以秒为单位.
# 换句话说，当事务执行时间超过阈值时，
# 捕捉当前的堆叠踪迹（stack trace），并传送到OneAPM.
# 这对定位长时间执行的事务很有帮助.
# 默认为 0.5 秒.
apdex_t = 0.5

# 默认为 true
match_interface_enabled = true

# 默认为 false
match_annotation_enabled = false

# 事务追踪器默认开启
# 赋值为 false 来关闭
# 默认为 true.
transaction_tracer.enabled = true

# 阀值用来确定是否纪录特定事务的详细踪迹。
# 当控制器的运行时间超过这个阀值，
# 事件将会被纪录，并传到 OneAPM.
# 赋值为任何浮点数都可以，
# 或者（默认）"apdex_f", 然后使用Apdex级别中的 "不满意的情况" 作为阀值。
# 它是apdex_t值的4倍。
# 默认为apdex_f.
transaction_tracer.transaction_threshold = apdex_f

# 当事务追踪器开启时，可以有选择地纪录SQL 语句。
# 追踪器有三种模式：
# "off" 不记录 SQL
# "raw" 按原模式纪录 SQL
# "obfuscated" 不纪录数字和字符串
# 默认为 obfuscated.
transaction_tracer.record_sql = obfuscated

# 混淆只在特定 SQL 中出现的数字和字符串
# 只有当"record_sql" 的值为"raw"时，设置有效。
#obfuscated_sql_fields = credit_card, ssn, password

# 值赋为true来将 SQL 语句录入日志，而不是单单纪录。
# 使用record_sql 模式可以将SQL录入日志。
# 默认为false.
transaction_tracer.log_sql = false

# 设置阀值收集一次 sql 调用中的 stack trace（堆栈信息），以秒为单位。
# 当SQL语句超过阀值时，
# 当前 stack trace 将被纪录，并发送到OneAPM.
# 这对筛选出用时过长的SQL语句有所帮助。
# D默认是0.5秒。
transaction_tracer.stack_trace_threshold = 0.5

# 决定agent是否为运行缓慢的 SQL 语句抓取执行计划
# 目前只支持 MySQL 和 PostgreSQL .
# 默认为true.
transaction_tracer.explain_enabled = false

# 当低于阀值时，不会纪录慢sql。
# 只在‘explain_enabled’为 true 时有效.
# 默认为 0.5 秒。
transaction_tracer.explain_threshold = 0.5

# 用这个设置来管理追踪事件的多样性。
# 设置数值越高，trace返回的数量越多。
# 当设置为“0”时，只返回最慢的一个trace。
# 默认为 20.
transaction_tracer.top_n = 20

# 是否开启慢事务追踪，开启后所有响应时间大于
# transaction_threshold 的事务都会被追踪。
# 必须保证transaction_tracer.cross_sampler_enabled = false
# 默认为 false，表示不开启。
transaction_tracer.slow_sampler_enabled = false

# 是否开启慢事务追踪，开启后tripId不为空都上传
# 必须保证transaction_tracer.slow_sampler_enabled = false
# 默认为 false，表示不开启。
# transaction_tracer.cross_sampler_enabled = false

# 限制抓取请求参数的数量
# 默认抓取64个参数
# transaction_tracer.max_user_parameters = 64

# 限制抓取请求参数的大小
# 默认限制256k
# transaction_tracer.max_user_parameter_size = 256

# 根据用户配置参数名称重命名事务名称，BTM简单版本
# 默认值为""
# transaction_parameter_names = name

# 控制每分钟上传analytic_event数据量
# 默认值2000,在高并发系统中可调大
transaction_events.max_samples_stored = 2000

# 根据用户配置参数把参数和值都上传到analytic_event
# 默认值为""
# transaction_events.parameter_names = name

# 决定 Agent 是否捕捉运行缓慢的 SQL 语句。
# 默认值为true
slow_sql.enabled = false

# 错误收集器捕捉错误信息，并发送给OneAPM.
# 错误收集器默认开启，赋值为 false 来关闭。
# 默认为 true.
error_collector.enabled = true

# 过滤特定的类名错误信息不报告到OneAPM.
# 用逗号分隔多个赋值内容。
# error_collector.ignore_errors=xx.bb.aa,xx.bb.cc

# 过滤特定的状态码错误信息被不报告到OneAPM.
# 用逗号分隔多个赋值内容。
# 默认为 404
error_collector.ignore_status_codes = 404

# 忽略静态文件不生成transaction
ignore_transaction = .js,.css,.jpg,.jpeg,.gif,.png,.bmp

# 当调用其他 OneAPM Agent 监控的应用时
# Cross Application Tracing 使用 Apache HttpClient 来添加请求和回应的标识，
# 以提供更好的性能数据。
# 赋值为 true 来开启多应用追踪。
# 默认为 true.
cross_application_tracer.enabled = true

# 线程分析器
# 分析时钟时间（ wall clock time ），CPU时间和在应用线程中调用记数的方法。
# 赋值为false以关闭线程分析器.
# 默认为true.
thread_profiler.enabled = true

# 分布式监控是否存在异步
is_async_enabled = false

# 抓取OSB事务
is_osb_enabled = false

# 自定义事务统一命名
# 默认为true
# 在ejb关系抓取时需要关闭
custom_namer.enabled = true

# ejb2监控
# 默认为true
# 需要weblogic ejb 关系抓取时，要关闭该参数
instrumentation_ejb2.enabled = true 

# 忽略EJB调用的系统方法
ejb.ignore_method = lookup,create,resolve_complete_info,getProperties

# 是否在 agent 端开启对 URL 中非 ISO-8859-1 字符的处理。
# 例如在 tomcat 应用中，URL 中包含的中文参数无法在 TPS 服务端正确显示时，而又不想在 tomcat 的
# server.xml 中设置 URIEncoding 参数，则需要开启 uri_encoding_enable 选项，同时配置
# original_uri_encoding 和 target_uri_encoding。
# 默认值为 false，表示不开启 agent 端对 非 ISO-8859-1 字符的处理。
uri_encoding_enabled = false

# Java 运行时字符集设置。
# 例如当 tomcat 未设置 URIEncoding 时，默认字符集为 ISO-8859-1，这个配置项通常不需要修改。
# 仅当 uri_encoding_enabled = true 时，该配置项才生效。
# 默认值为 ISO-8859-1
original_uri_encoding = ISO-8859-1

# 需要将 URL 字符串转换成的编码，例如在 tomcat 应用中 URL 参数含有中文，而又不想在 tomcat 的
# server.xml 中设置 URIEncoding 参数可以设置该配置项为 UTF-8。
# 仅当 uri_encoding_enabled = true 时，该配置项才生效。
# 默认值为 UTF-8
target_uri_encoding = UTF-8